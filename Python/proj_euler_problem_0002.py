'''
Problem 2
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 
terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.
'''

sum = 0

def EulerProblem0002():
	global sum
	
	fn_1 = 1
	fn_2 = 1
	fn = fn_1 + fn_2
	while fn < 4000000:
		print(fn_2, fn_1, fn)
		if fn % 2 == 0:
			print("Adding fn = " + str(fn) + " to sum = " + str(sum))
			sum += fn
		fn_2 = fn_1
		fn_1 = fn
		fn = fn_1 + fn_2
	
	
if __name__ == "__main__":
	print("Euler problem one")
	EulerProblem0002()
	print("Sum = " + str(sum))
	
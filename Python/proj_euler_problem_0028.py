'''
Problem 28
Number spiral diagonals

Starting with the number 1 and moving to the right in a clockwise direction
a 5 by 5 spiral is formed as follows:

!21 22 23 24 !25
 20 !7  8 !9  10
 19  6 !1  2  11
 18 !5  4 !3  12
!17 16 15 14 !13


It can be verified that the sum of the numbers on the diagonals is 101.

What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral
formed in the same way?
'''

'''
Sketch of soluion A
Too complex compared to B. Will be written up later.

Sketch of soluion B

From each concentric circle in the example we choose the following values

0. 1 {special case}
1. [3, 5, 7, 9]
   The first value is generated by adding 2 to last value of previous circle
   Each subsequent value generate by adding 2
   Number of values in the array 4
2. [13, 17, 21, 25]
   The first value is generated by adding 4 to last value of previous circle
   Each subsequent value generate by adding 4
   Number of values in the array 4
3. [31, 37, 43, 49]
   The first value is generated by adding 6 to last value of previous circle
   Each subsequent value generate by adding 6
   Number of values in the array 4

Genralizing above sequence
For the it slice:
   The first value is generated by adding i * 2 to last value of previous circle
   Each subsequent value generate by adding i * 2
   Number of values in the array 4
'''
import math
import sys

def EulerProblem0028_02():
    number = 1001
    total = number * number
    sum = 1
    curr = 1
    index = 1

    while curr < total:
        for i in range(4):
            curr = curr + index * 2
            sum += curr
        index = index + 1
    print(sum)



def EulerProblem0028_01():
    delta = [(0,1), (1,0), (0,-1), (-1,0)]

    number = 1001

    array = [[0 for x in range(number)] for y in range(number)]

    done = 0
    start = [int(number / 2), int(number / 2)]
    index = 0
    dx, dy = delta[index]
    seed = 1

    #print(start)
    #print(dx, dy)

    array[start[0]][start[1]] = seed

    for i in range(1, number + 1):
        if done:
            break
        for j in [0, 2]:
            if done:
                break
            for k in range(1, i + 1):
                start[0] += dx
                start[1] += dy

                if start[0] >= number or start[1] >= number:
                    done = 1
                    break
                else:
                    seed += 1
                    array[start[0]][start[1]] = seed
                    #print(start)

            index += 1
            index %= 4
            dx, dy = delta[index]

    #for i in range(0, number):
    #    print(array[i])

    diagSum = 0
    dx, dy = 0, number - 1
    for i in range(0, number):
        diagSum += array[i][i]
        diagSum += array[dx][dy]
        dx += 1
        dy -= 1

    diagSum -= array[int(number / 2)][int(number / 2)]

    print(diagSum)

if __name__ == "__main__":
    EulerProblem0028_01()
    EulerProblem0028_02()